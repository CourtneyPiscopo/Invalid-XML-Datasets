title>', '>>>title>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>title>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>title>', '<title><<<>>>', '<title><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<title><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<title>AAA', '<title>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<title>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<title><title><title>', '<title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title>', '<title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title><title>', '', '<<<<title>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<title>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<title>', '<AAAtitle>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtitle>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtitle>', '<title>>>>', '<title>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<title>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['Codec Interface', 'Codec Interface<<<>>>', 'Codec Interface<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'Codec Interface<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'Codec InterfaceAAA', 'Codec InterfaceAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'Codec InterfaceAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'Codec InterfaceCodec InterfaceCodec Interface', 'Codec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec Interface', 'Codec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec InterfaceCodec Interface', '', 'AAACodec Interface', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACodec Interface', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACodec Interface', 'Codec    Interface', 'Codec                               Interface', 'Codec                                                             Interface', 'Codec AAAInterface', 'Codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAInterface', 'Codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAInterface'], ['</title>', '>>>/title>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/title>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/title>', '</title><<<>>>', '</title><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</title><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</title>AAA', '</title>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</title>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</title></title></title>', '</title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title>', '</title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title></title>', '', '<<<</title>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</title>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</title>', '<////title>', '<///////////////////////////////title>', '</////////////////////////////////////////////////////////////title>', '</AAAtitle>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtitle>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtitle>', '</title>>>>', '</title>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</title>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['\n\n  ', '\n\n  <<<>>>', '\n\n  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '\n\n  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '\n\n  AAA', '\n\n  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '\n\n  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '\n\n  \n\n  \n\n  ', '\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  ', '\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  ', '', '\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n     ', '\n\n                                ', '\n\n                                                              ', '\n\n     ', '\n\n                                ', '\n\n                                                              '], ['<para>', '>>>para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>para>', '<para><<<>>>', '<para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<para>AAA', '<para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<para><para><para>', '<para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para>', '<para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para>', '', '<<<<para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<para>', '<AAApara>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '<para>>>>', '<para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n<<<>>>', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nAAA', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\nA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', '', 'AAAA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A    V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A                               V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A                                                             V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A AAAV4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V1114L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V1111111111111111111111111111114L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V1111111111111111111111111111111111111111111111111111111111114L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4AAAL2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L1112 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L1111111111111111111111111111112 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L1111111111111111111111111111111111111111111111111111111111112 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2    codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2                               codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2                                                             codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 AAAcodec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec    can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec                               can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec                                                             can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec AAAcan compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcan compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcan compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can    compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can                               compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can                                                             compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can AAAcompress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcompress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcompress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress,,,, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress,    decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress,                               decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress,                                                             decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, AAAdecompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdecompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdecompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress,,,, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress,    transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress,                               transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress,                                                             transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, AAAtransform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtransform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtransform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform,,,, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform,    or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform,                               or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform,                                                             or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, AAAor otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAor otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAor otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or    otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or                               otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or                                                             otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or AAAotherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAotherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAotherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\n\n\n\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nAAAconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert    video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert                               video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert                                                             video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert AAAvideo data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvideo data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvideo data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video    data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video                               data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video                                                             data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video AAAdata from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdata from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdata from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data    from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data                               from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data                                                             from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data AAAfrom one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfrom one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfrom one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from    one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from                               one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from                                                             one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from AAAone format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAone format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAone format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one    format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one                               format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one                                                             format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one AAAformat into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAformat into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAformat into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format    into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format                               into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format                                                             into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format AAAinto another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAinto another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAinto another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into    another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into                               another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into                                                             another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into AAAanother format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAanother format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAanother format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another    format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another                               format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another                                                             format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another AAAformat, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAformat, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAformat, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format,,,, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format,    in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format,                               in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format,                                                             in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, AAAin memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAin memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAin memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in    memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in                               memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in                                                             memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in AAAmemory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory.... Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory............................... Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory............................................................. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory.    Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory.                               Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory.                                                             Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. AAATypically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. AAAAAAAAAAAAAAAAAAAAAAAAAAAAAATypically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATypically\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\n\n\n\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nAAAsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsuch devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch    devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch                               devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch                                                             devices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch AAAdevices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdevices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdevices are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices    are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices                               are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices                                                             are memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices AAAare memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAare memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAare memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are    memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are                               memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are                                                             memory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are AAAmemory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory-to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory----to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-------------------------------to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-------------------------------------------------------------to-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-AAAto-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto-memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to----memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-------------------------------memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-------------------------------------------------------------memory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-AAAmemory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory    devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory                               devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory                                                             devices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory AAAdevices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdevices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdevices (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices    (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices                               (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices                                                             (i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices ((((i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (((((((((((((((((((((((((((((((i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((i.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (AAAi.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAi.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAi.e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i....e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i...............................e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.............................................................e. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.AAAe. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAe. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAe. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e.... devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e............................... devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e............................................................. devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e.    devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e.                               devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e.                                                             devices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. AAAdevices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdevices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdevices with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices    with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices                               with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices                                                             with the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices AAAwith the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwith the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwith the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with    the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with                               the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with                                                             the\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with AAAthe\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n\n\n\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n', 'A V4L2 codec can compress, decompress, transform, or otherwise\nconvert video data from one format into another format, in memory. Typically\nsuch devices are memory-to-memory devices (i.e. devices with the\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'], ['<constant>', '>>>constant>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>constant>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>constant>', '<constant><<<>>>', '<constant><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<constant><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<constant>AAA', '<constant>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<constant>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<constant><constant><constant>', '<constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant>', '<constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant>', '', '<<<<constant>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<constant>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<constant>', '<AAAconstant>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAconstant>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAconstant>', '<constant>>>>', '<constant>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<constant>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['V4L2_CAP_VIDEO_M2M', 'V4L2_CAP_VIDEO_M2M<<<>>>', 'V4L2_CAP_VIDEO_M2M<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'V4L2_CAP_VIDEO_M2M<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'V4L2_CAP_VIDEO_M2MAAA', 'V4L2_CAP_VIDEO_M2MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'V4L2_CAP_VIDEO_M2MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'V4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2M', 'V4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2M', 'V4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2MV4L2_CAP_VIDEO_M2M', '', 'AAAV4L2_CAP_VIDEO_M2M', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV4L2_CAP_VIDEO_M2M', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV4L2_CAP_VIDEO_M2M', 'V1114L2_CAP_VIDEO_M2M', 'V1111111111111111111111111111114L2_CAP_VIDEO_M2M', 'V1111111111111111111111111111111111111111111111111111111111114L2_CAP_VIDEO_M2M', 'V4AAAL2_CAP_VIDEO_M2M', 'V4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2_CAP_VIDEO_M2M', 'V4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2_CAP_VIDEO_M2M', 'V4L1112_CAP_VIDEO_M2M', 'V4L1111111111111111111111111111112_CAP_VIDEO_M2M', 'V4L1111111111111111111111111111111111111111111111111111111111112_CAP_VIDEO_M2M', 'V4L2____CAP_VIDEO_M2M', 'V4L2_______________________________CAP_VIDEO_M2M', 'V4L2_____________________________________________________________CAP_VIDEO_M2M', 'V4L2_AAACAP_VIDEO_M2M', 'V4L2_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAP_VIDEO_M2M', 'V4L2_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAP_VIDEO_M2M', 'V4L2_CAP____VIDEO_M2M', 'V4L2_CAP_______________________________VIDEO_M2M', 'V4L2_CAP_____________________________________________________________VIDEO_M2M', 'V4L2_CAP_AAAVIDEO_M2M', 'V4L2_CAP_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVIDEO_M2M', 'V4L2_CAP_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVIDEO_M2M', 'V4L2_CAP_VIDEO____M2M', 'V4L2_CAP_VIDEO_______________________________M2M', 'V4L2_CAP_VIDEO_____________________________________________________________M2M', 'V4L2_CAP_VIDEO_AAAM2M', 'V4L2_CAP_VIDEO_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM2M', 'V4L2_CAP_VIDEO_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM2M', 'V4L2_CAP_VIDEO_M1112M', 'V4L2_CAP_VIDEO_M1111111111111111111111111111112M', 'V4L2_CAP_VIDEO_M1111111111111111111111111111111111111111111111111111111111112M', 'V4L2_CAP_VIDEO_M2AAAM', 'V4L2_CAP_VIDEO_M2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM', 'V4L2_CAP_VIDEO_M2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM'], ['</constant>', '>>>/constant>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/constant>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/constant>', '</constant><<<>>>', '</constant><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</constant><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</constant>AAA', '</constant>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</constant>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</constant></constant></constant>', '</constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant>', '</constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant>', '', '<<<</constant>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</constant>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</constant>', '<////constant>', '<///////////////////////////////constant>', '</////////////////////////////////////////////////////////////constant>', '</AAAconstant>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAconstant>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAconstant>', '</constant>>>>', '</constant>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</constant>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], [' or ', ' or <<<>>>', ' or <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', ' or <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', ' or AAA', ' or AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ' or AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ' or  or  or ', ' or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or ', ' or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or  or ', '', '    or ', '                               or ', '                                                             or ', ' AAAor ', ' AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAor ', ' AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAor ', ' or    ', ' or                               ', ' or                                                             '], ['<constant>', '>>>constant>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>constant>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>constant>', '<constant><<<>>>', '<constant><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<constant><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<constant>AAA', '<constant>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<constant>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<constant><constant><constant>', '<constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant>', '<constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant><constant>', '', '<<<<constant>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<constant>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<constant>', '<AAAconstant>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAconstant>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAconstant>', '<constant>>>>', '<constant>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<constant>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['V4L2_CAP_VIDEO_M2M_MPLANE', 'V4L2_CAP_VIDEO_M2M_MPLANE<<<>>>', 'V4L2_CAP_VIDEO_M2M_MPLANE<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'V4L2_CAP_VIDEO_M2M_MPLANE<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'V4L2_CAP_VIDEO_M2M_MPLANEAAA', 'V4L2_CAP_VIDEO_M2M_MPLANEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'V4L2_CAP_VIDEO_M2M_MPLANEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'V4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANE', 'V4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANE', 'V4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANEV4L2_CAP_VIDEO_M2M_MPLANE', '', 'AAAV4L2_CAP_VIDEO_M2M_MPLANE', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV4L2_CAP_VIDEO_M2M_MPLANE', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV4L2_CAP_VIDEO_M2M_MPLANE', 'V1114L2_CAP_VIDEO_M2M_MPLANE', 'V1111111111111111111111111111114L2_CAP_VIDEO_M2M_MPLANE', 'V1111111111111111111111111111111111111111111111111111111111114L2_CAP_VIDEO_M2M_MPLANE', 'V4AAAL2_CAP_VIDEO_M2M_MPLANE', 'V4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2_CAP_VIDEO_M2M_MPLANE', 'V4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2_CAP_VIDEO_M2M_MPLANE', 'V4L1112_CAP_VIDEO_M2M_MPLANE', 'V4L1111111111111111111111111111112_CAP_VIDEO_M2M_MPLANE', 'V4L1111111111111111111111111111111111111111111111111111111111112_CAP_VIDEO_M2M_MPLANE', 'V4L2____CAP_VIDEO_M2M_MPLANE', 'V4L2_______________________________CAP_VIDEO_M2M_MPLANE', 'V4L2_____________________________________________________________CAP_VIDEO_M2M_MPLANE', 'V4L2_AAACAP_VIDEO_M2M_MPLANE', 'V4L2_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAP_VIDEO_M2M_MPLANE', 'V4L2_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAP_VIDEO_M2M_MPLANE', 'V4L2_CAP____VIDEO_M2M_MPLANE', 'V4L2_CAP_______________________________VIDEO_M2M_MPLANE', 'V4L2_CAP_____________________________________________________________VIDEO_M2M_MPLANE', 'V4L2_CAP_AAAVIDEO_M2M_MPLANE', 'V4L2_CAP_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVIDEO_M2M_MPLANE', 'V4L2_CAP_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVIDEO_M2M_MPLANE', 'V4L2_CAP_VIDEO____M2M_MPLANE', 'V4L2_CAP_VIDEO_______________________________M2M_MPLANE', 'V4L2_CAP_VIDEO_____________________________________________________________M2M_MPLANE', 'V4L2_CAP_VIDEO_AAAM2M_MPLANE', 'V4L2_CAP_VIDEO_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM2M_MPLANE', 'V4L2_CAP_VIDEO_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM2M_MPLANE', 'V4L2_CAP_VIDEO_M1112M_MPLANE', 'V4L2_CAP_VIDEO_M1111111111111111111111111111112M_MPLANE', 'V4L2_CAP_VIDEO_M1111111111111111111111111111111111111111111111111111111111112M_MPLANE', 'V4L2_CAP_VIDEO_M2AAAM_MPLANE', 'V4L2_CAP_VIDEO_M2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM_MPLANE', 'V4L2_CAP_VIDEO_M2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM_MPLANE', 'V4L2_CAP_VIDEO_M2M____MPLANE', 'V4L2_CAP_VIDEO_M2M_______________________________MPLANE', 'V4L2_CAP_VIDEO_M2M_____________________________________________________________MPLANE', 'V4L2_CAP_VIDEO_M2M_AAAMPLANE', 'V4L2_CAP_VIDEO_M2M_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPLANE', 'V4L2_CAP_VIDEO_M2M_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPLANE'], ['</constant>', '>>>/constant>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/constant>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/constant>', '</constant><<<>>>', '</constant><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</constant><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</constant>AAA', '</constant>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</constant>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</constant></constant></constant>', '</constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant>', '</constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant></constant>', '', '<<<</constant>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</constant>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</constant>', '<////constant>', '<///////////////////////////////constant>', '</////////////////////////////////////////////////////////////constant>', '</AAAconstant>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAconstant>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAconstant>', '</constant>>>>', '</constant>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</constant>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['\ncapability set).\n', '\ncapability set).\n<<<>>>', '\ncapability set).\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '\ncapability set).\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '\ncapability set).\nAAA', '\ncapability set).\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '\ncapability set).\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '\ncapability set).\n\ncapability set).\n\ncapability set).\n', '\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n', '\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n\ncapability set).\n', '', '\n\n\n\ncapability set).\n', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncapability set).\n', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncapability set).\n', '\nAAAcapability set).\n', '\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcapability set).\n', '\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcapability set).\n', '\ncapability    set).\n', '\ncapability                               set).\n', '\ncapability                                                             set).\n', '\ncapability AAAset).\n', '\ncapability AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAset).\n', '\ncapability AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAset).\n', '\ncapability set)))).\n', '\ncapability set))))))))))))))))))))))))))))))).\n', '\ncapability set))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).\n', '\ncapability set)....\n', '\ncapability set)...............................\n', '\ncapability set).............................................................\n', '\ncapability set).\n\n\n\n', '\ncapability set).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n', '\ncapability set).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'], ['</para>', '>>>/para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/para>', '</para><<<>>>', '</para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</para>AAA', '</para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</para></para></para>', '</para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para>', '</para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para>', '', '<<<</para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</para>', '<////para>', '<///////////////////////////////para>', '</////////////////////////////////////////////////////////////para>', '</AAApara>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '</para>>>>', '</para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['\n\n  ', '\n\n  <<<>>>', '\n\n  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '\n\n  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '\n\n  AAA', '\n\n  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '\n\n  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '\n\n  \n\n  \n\n  ', '\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  ', '\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  ', '', '\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n     ', '\n\n                                ', '\n\n                                                              ', '\n\n     ', '\n\n                                ', '\n\n                                                              '], ['<para>', '>>>para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>para>', '<para><<<>>>', '<para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<para>AAA', '<para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<para><para><para>', '<para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para>', '<para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para>', '', '<<<<para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<para>', '<AAApara>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '<para>>>>', '<para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.<<<>>>', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.AAA', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', '', 'AAAA memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A    memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A                               memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A                                                             memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A AAAmemory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory----to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-------------------------------to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-------------------------------------------------------------to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-AAAto-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to----memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-------------------------------memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-------------------------------------------------------------memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-AAAmemory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory    video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory                               video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory                                                             video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory AAAvideo node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvideo node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvideo node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video    node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video                               node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video                                                             node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video AAAnode acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnode acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnode acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node    acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node                               acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node                                                             acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node AAAacts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAacts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAacts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts    just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts                               just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts                                                             just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts AAAjust like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjust like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjust like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just    like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just                               like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just                                                             like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just AAAlike a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlike a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlike a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like    a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like                               a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like                                                             a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like AAAa normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a    normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a                               normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a                                                             normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a AAAnormal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnormal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnormal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal    video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal                               video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal                                                             video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal AAAvideo node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvideo node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvideo node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video    node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video                               node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video                                                             node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video AAAnode, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnode, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnode, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node,,,, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node,    but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node,                               but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node,                                                             but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, AAAbut it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbut it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbut it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but    it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but                               it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but                                                             it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but AAAit\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAit\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAit\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\n\n\n\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nAAAsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports    both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports                               both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports                                                             both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports AAAboth output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAboth output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAboth output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both    output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both                               output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both                                                             output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both AAAoutput (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoutput (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoutput (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output    (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output                               (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output                                                             (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output ((((sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (((((((((((((((((((((((((((((((sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (AAAsending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending    frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending                               frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending                                                             frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending AAAframes from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAframes from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAframes from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames    from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames                               from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames                                                             from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames AAAfrom memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfrom memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfrom memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from    memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from                               memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from                                                             memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from AAAmemory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory    to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory                               to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory                                                             to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory AAAto the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to    the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to                               the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to                                                             the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to AAAthe codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the    codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the                               codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the                                                             codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the AAAcodec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec    hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec                               hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec                                                             hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec AAAhardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware)))) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware))))))))))))))))))))))))))))))) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware)    and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware)                               and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware)                                                             and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) AAAand\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAand\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAand\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\n\n\n\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\nAAAcapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture    (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture                               (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture                                                             (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture ((((receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (((((((((((((((((((((((((((((((receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (AAAreceiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAreceiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAreceiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving    the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving                               the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving                                                             the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving AAAthe processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the    processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the                               processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the                                                             processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the AAAprocessed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAprocessed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAprocessed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed    frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed                               frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed                                                             frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed AAAframes from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAframes from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAframes from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames    from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames                               from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames                                                             from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames AAAfrom the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfrom the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfrom the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from    the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from                               the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from                                                             the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from AAAthe codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the    codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the                               codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the                                                             codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the AAAcodec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec    hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec                               hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec                                                             hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec AAAhardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware    into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware                               into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware                                                             into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware AAAinto memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAinto memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAinto memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into    memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into                               memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into                                                             memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into AAAmemory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory))))\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)))))))))))))))))))))))))))))))\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\n\n\n\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nAAAstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream    I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream                               I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream                                                             I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream AAAI/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I////O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I///////////////////////////////O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/////////////////////////////////////////////////////////////O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/AAAO. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O.... An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O............................... An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O............................................................. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O.    An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O.                               An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O.                                                             An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. AAAAn application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An    application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An                               application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An                                                             application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An AAAapplication will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAapplication will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAapplication will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application    will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application                               will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application                                                             will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application AAAwill have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwill have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwill have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will    have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will                               have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will                                                             have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will AAAhave to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhave to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhave to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have    to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have                               to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have                                                             to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have AAAto setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to    setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to                               setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to                                                             setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to AAAsetup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsetup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsetup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup    the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup                               the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup                                                             the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup AAAthe stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the    stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the                               stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the                                                             stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the AAAstream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAstream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAstream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\n\n\n\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nAAAI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI////O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI///////////////////////////////O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/////////////////////////////////////////////////////////////O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/AAAO for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O    for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O                               for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O                                                             for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O AAAfor both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfor both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfor both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for    both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for                               both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for                                                             both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for AAAboth sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAboth sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAboth sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both    sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both                               sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both                                                             sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both AAAsides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides    and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides                               and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides                                                             and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides AAAand finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAand finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAand finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and    finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and                               finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and                                                             finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and AAAfinally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfinally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfinally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally    call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally                               call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally                                                             call &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally AAAcall &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcall &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcall &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call    &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call                               &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call                                                             &VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &&&&VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&VIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &AAAVIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVIDIOC-STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC----STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-------------------------------STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-------------------------------------------------------------STREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-AAASTREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAASTREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASTREAMON; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON;;;; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON;    for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON;                               for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON;                                                             for both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; AAAfor both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfor both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfor both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for    both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for                               both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for                                                             both capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for AAAboth capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAboth capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAboth capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both    capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both                               capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both                                                             capture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both AAAcapture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcapture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcapture and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture    and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture                               and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture                                                             and output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture AAAand output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAand output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAand output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and    output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and                               output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and                                                             output\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and AAAoutput\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoutput\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoutput\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\n\n\n\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nAAAto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto    start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto                               start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto                                                             start the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto AAAstart the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAstart the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAstart the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start    the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start                               the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start                                                             the codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start AAAthe codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the    codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the                               codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the                                                             codec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the AAAcodec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec.', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec....', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec...............................', 'A memory-to-memory video node acts just like a normal video node, but it\nsupports both output (sending frames from memory to the codec hardware) and\ncapture (receiving the processed frames from the codec hardware into memory)\nstream I/O. An application will have to setup the stream\nI/O for both sides and finally call &VIDIOC-STREAMON; for both capture and output\nto start the codec.............................................................'], ['</para>', '>>>/para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/para>', '</para><<<>>>', '</para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</para>AAA', '</para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</para></para></para>', '</para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para>', '</para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para>', '', '<<<</para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</para>', '<////para>', '<///////////////////////////////para>', '</////////////////////////////////////////////////////////////para>', '</AAApara>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '</para>>>>', '</para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['\n\n  ', '\n\n  <<<>>>', '\n\n  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '\n\n  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '\n\n  AAA', '\n\n  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '\n\n  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '\n\n  \n\n  \n\n  ', '\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  ', '\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  ', '', '\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n     ', '\n\n                                ', '\n\n                                                              ', '\n\n     ', '\n\n                                ', '\n\n                                                              '], ['<para>', '>>>para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>para>', '<para><<<>>>', '<para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<para>AAA', '<para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<para><para><para>', '<para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para>', '<para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para>', '', '<<<<para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<para>', '<AAApara>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '<para>>>>', '<para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee <<<>>>', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee AAA', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', '', 'AAAVideo compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVideo compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVideo compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video    compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video                               compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video                                                             compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video AAAcompression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcompression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcompression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression    codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression                               codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression                                                             codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression AAAcodecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs    use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs                               use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs                                                             use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs AAAuse the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuse the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuse the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use    the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use                               the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use                                                             the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use AAAthe MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the    MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the                               MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the                                                             MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the AAAMPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG    controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG                               controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG                                                             controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG AAAcontrols to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcontrols to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcontrols to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls    to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls                               to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls                                                             to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls AAAto setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to    setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to                               setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to                                                             setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to AAAsetup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsetup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsetup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup    their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup                               their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup                                                             their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup AAAtheir codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtheir codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtheir codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their    codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their                               codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their                                                             codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their AAAcodec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec    parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec                               parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec                                                             parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec AAAparameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAparameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAparameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n\n\n\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n((((note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(((((((((((((((((((((((((((((((note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((note that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(AAAnote that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnote that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnote that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note    that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note                               that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note                                                             that the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note AAAthat the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthat the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthat the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that    the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that                               the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that                                                             the MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that AAAthe MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the    MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the                               MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the                                                             MPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the AAAMPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPEG controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG    controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG                               controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG                                                             controls actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG AAAcontrols actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcontrols actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcontrols actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls    actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls                               actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls                                                             actually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls AAAactually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAactually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAactually support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually    support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually                               support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually                                                             support many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually AAAsupport many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsupport many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsupport many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support    many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support                               many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support                                                             many more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support AAAmany more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmany more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmany more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many    more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many                               more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many                                                             more codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many AAAmore codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmore codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmore codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more    codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more                               codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more                                                             codecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more AAAcodecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodecs than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs    than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs                               than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs                                                             than just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs AAAthan just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthan just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthan just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than    just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than                               just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than                                                             just MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than AAAjust MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjust MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjust MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just    MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just                               MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just                                                             MPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just AAAMPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPEG).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG)))).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG))))))))))))))))))))))))))))))).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG)....\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG)...............................\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).............................................................\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\n\n\n\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nAAASee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASee ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee    ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee                               ', 'Video compression codecs use the MPEG controls to setup their codec parameters\n(note that the MPEG controls actually support many more codecs than just MPEG).\nSee                                                             '], ['<xref linkend="mpeg-controls">', '>>>xref linkend="mpeg-controls">', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>xref linkend="mpeg-controls">', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>xref linkend="mpeg-controls">', '<xref linkend="mpeg-controls"><<<>>>', '<xref linkend="mpeg-controls"><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<xref linkend="mpeg-controls"><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<xref linkend="mpeg-controls">AAA', '<xref linkend="mpeg-controls">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<xref linkend="mpeg-controls">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls">', '<xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls">', '<xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls"><xref linkend="mpeg-controls">', '', '<<<<xref linkend="mpeg-controls">', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<xref linkend="mpeg-controls">', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<xref linkend="mpeg-controls">', '<AAAxref linkend="mpeg-controls">', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxref linkend="mpeg-controls">', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxref linkend="mpeg-controls">', '<xref    linkend="mpeg-controls">', '<xref                               linkend="mpeg-controls">', '<xref                                                             linkend="mpeg-controls">', '<xref AAAlinkend="mpeg-controls">', '<xref AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlinkend="mpeg-controls">', '<xref AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlinkend="mpeg-controls">', '<xref linkend===="mpeg-controls">', '<xref linkend==============================="mpeg-controls">', '<xref linkend============================================================="mpeg-controls">', '<xref linkend=""""mpeg-controls">', '<xref linkend="""""""""""""""""""""""""""""""mpeg-controls">', '<xref linkend="""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""mpeg-controls">', '<xref linkend="AAAmpeg-controls">', '<xref linkend="AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmpeg-controls">', '<xref linkend="AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmpeg-controls">', '<xref linkend="mpeg----controls">', '<xref linkend="mpeg-------------------------------controls">', '<xref linkend="mpeg-------------------------------------------------------------controls">', '<xref linkend="mpeg-AAAcontrols">', '<xref linkend="mpeg-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcontrols">', '<xref linkend="mpeg-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcontrols">', '<xref linkend="mpeg-controls"""">', '<xref linkend="mpeg-controls""""""""""""""""""""""""""""""">', '<xref linkend="mpeg-controls""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">', '<xref linkend="mpeg-controls">>>>', '<xref linkend="mpeg-controls">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<xref linkend="mpeg-controls">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['</xref>', '>>>/xref>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/xref>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/xref>', '</xref><<<>>>', '</xref><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</xref><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</xref>AAA', '</xref>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</xref>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</xref></xref></xref>', '</xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref>', '</xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref></xref>', '', '<<<</xref>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</xref>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</xref>', '<////xref>', '<///////////////////////////////xref>', '</////////////////////////////////////////////////////////////xref>', '</AAAxref>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxref>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxref>', '</xref>>>>', '</xref>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</xrefpara>', '>>>/para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/para>', '</para><<<>>>', '</para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</para>AAA', '</para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</para></para></para>', '</para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para>', '</para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para>', '', '<<<</para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</para>', '<////para>', '<///////////////////////////////para>', '</////////////////////////////////////////////////////////////para>', '</AAApara>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '</para>>>>', '</para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['\n\n  ', '\n\n  <<<>>>', '\n\n  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '\n\n  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '\n\n  AAA', '\n\n  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '\n\n  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '\n\n  \n\n  \n\n  ', '\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  ', '\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  ', '', '\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ', '\n\n     ', '\n\n                                ', '\n\n                                                              ', '\n\n     ', '\n\n                                ', '\n\n                                                              '], ['<para>', '>>>para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>para>', '<para><<<>>>', '<para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<para>AAA', '<para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '<para><para><para>', '<para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para>', '<para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para><para>', '', '<<<<para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<para>', '<AAApara>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '<AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '<para>>>>', '<para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '<para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'], ['Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).<<<>>>', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).AAA', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', '', 'AAAMemory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMemory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMemory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory----to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-------------------------------to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-------------------------------------------------------------to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-AAAto-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to----memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-------------------------------memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-------------------------------------------------------------memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-AAAmemory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmemory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory    devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory                               devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory                                                             devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory AAAdevices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdevices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdevices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices    can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices                               can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices                                                             can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices AAAcan often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcan often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcan often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can    often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can                               often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can                                                             often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can AAAoften be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoften be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoften be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often    be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often                               be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often                                                             be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often AAAbe used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbe used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbe used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be    used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be                               used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be                                                             used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be AAAused as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAused as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAused as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used    as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used                               as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used                                                             as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used AAAas a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAas a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAas a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as    a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as                               a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as                                                             a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as AAAa shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a    shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a                               shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a                                                             shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a AAAshared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAshared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAshared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared    resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared                               resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared                                                             resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared AAAresource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAresource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAresource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource:::: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource::::::::::::::::::::::::::::::: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource:    you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource:                               you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource:                                                             you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: AAAyou can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyou can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyou can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you    can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you                               can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you                                                             can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you AAAcan\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcan\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcan\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\n\n\n\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nAAAopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen    the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen                               the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen                                                             the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen AAAthe video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the    video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the                               video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the                                                             video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the AAAvideo node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvideo node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvideo node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video    node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video                               node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video                                                             node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video AAAnode multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnode multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnode multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node    multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node                               multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node                                                             multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node AAAmultiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmultiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmultiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple    times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple                               times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple                                                             times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple AAAtimes, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtimes, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtimes, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times,,,, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times,    each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times,                               each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times,                                                             each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, AAAeach application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeach application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeach application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each    application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each                               application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each                                                             application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each AAAapplication setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAapplication setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAapplication setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application    setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application                               setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application                                                             setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application AAAsetting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsetting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsetting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting    up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting                               up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting                                                             up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting AAAup their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAup their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAup their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up    their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up                               their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up                                                             their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up AAAtheir own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtheir own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtheir own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their    own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their                               own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their                                                             own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their AAAown codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAown codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAown codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own    codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own                               codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own                                                             codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own AAAcodec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec    properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec                               properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec                                                             properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec AAAproperties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAproperties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAproperties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\n\n\n\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nAAAthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat    are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat                               are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat                                                             are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat AAAare local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAare local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAare local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are    local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are                               local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are                                                             local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are AAAlocal to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlocal to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlocal to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local    to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local                               to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local                                                             to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local AAAto the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to    the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to                               the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to                                                             the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to AAAthe file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the    file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the                               file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the                                                             file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the AAAfile handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfile handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfile handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file    handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file                               handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file                                                             handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file AAAhandle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhandle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhandle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle,,,, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle,    and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle,                               and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle,                                                             and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, AAAand each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAand each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAand each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and    each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and                               each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and                                                             each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and AAAeach can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeach can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeach can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each    can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each                               can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each                                                             can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each AAAcan use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcan use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcan use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can    use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can                               use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can                                                             use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can AAAuse it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuse it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuse it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use    it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use                               it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use                                                             it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use AAAit independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAit independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAit independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it    independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it                               independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it                                                             independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it AAAindependently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAindependently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAindependently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently    from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently                               from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently                                                             from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently AAAfrom the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfrom the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfrom the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from    the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from                               the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from                                                             the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from AAAthe others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the    others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the                               others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the                                                             others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the AAAothers.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAothers.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAothers.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others....\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others...............................\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.............................................................\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\n\n\n\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nAAAThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe    driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe                               driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe                                                             driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe AAAdriver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdriver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdriver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver    will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver                               will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver                                                             will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver AAAwill arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwill arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwill arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will    arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will                               arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will                                                             arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will AAAarbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAarbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAarbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate    access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate                               access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate                                                             access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate AAAaccess to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaccess to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaccess to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access    to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access                               to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access                                                             to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access AAAto the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to    the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to                               the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to                                                             the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to AAAthe codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the    codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the                               codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the                                                             codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the AAAcodec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcodec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec    and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec                               and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec                                                             and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec AAAand reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAand reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAand reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and    reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and                               reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and                                                             reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and AAAreprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAreprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAreprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram    it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram                               it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram                                                             it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram AAAit whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAit whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAit whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it    whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it                               whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it                                                             whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it AAAwhenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwhenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwhenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever    another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever                               another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever                                                             another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever AAAanother file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAanother file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAanother file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another    file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another                               file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another                                                             file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another AAAfile\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfile\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfile\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\n\n\n\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nAAAhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler    gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler                               gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler                                                             gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler AAAgets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets    access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets                               access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets                                                             access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets AAAaccess. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaccess. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaccess. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access.... This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access............................... This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access............................................................. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access.    This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access.                               This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access.                                                             This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. AAAThis is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAThis is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAThis is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This    is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This                               is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This                                                             is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This AAAis different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAis different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAis different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is    different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is                               different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is                                                             different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is AAAdifferent from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdifferent from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdifferent from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different    from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different                               from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different                                                             from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different AAAfrom the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfrom the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfrom the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from    the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from                               the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from                                                             the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from AAAthe usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the    usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the                               usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the                                                             usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the AAAusual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAusual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAusual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual    video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual                               video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual                                                             video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual AAAvideo node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvideo node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvideo node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video    node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video                               node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video                                                             node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video AAAnode behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnode behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnode behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node    behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node                               behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node                                                             behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node AAAbehavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbehavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbehavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior    where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior                               where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior                                                             where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior AAAwhere the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwhere the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwhere the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where    the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where                               the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where                                                             the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where AAAthe video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the    video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the                               video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the                                                             video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the AAAvideo properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvideo properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvideo properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video    properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video                               properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video                                                             properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video AAAproperties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAproperties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAproperties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\n\n\n\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nAAAare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare    global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare                               global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare                                                             global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare AAAglobal to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAglobal to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAglobal to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global    to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global                               to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global                                                             to the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global AAAto the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAto the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to    the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to                               the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to                                                             the device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to AAAthe device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthe device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the    device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the                               device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the                                                             device (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the AAAdevice (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdevice (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdevice (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device    (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device                               (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device                                                             (i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device ((((i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (((((((((((((((((((((((((((((((i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((i.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (AAAi.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAi.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAi.e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i....e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i...............................e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.............................................................e. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.AAAe. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAe. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAe. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e.... changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e............................... changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e............................................................. changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e.    changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e.                               changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e.                                                             changing something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. AAAchanging something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAchanging something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAchanging something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing    something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing                               something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing                                                             something through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing AAAsomething through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsomething through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsomething through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something    through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something                               through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something                                                             through one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something AAAthrough one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthrough one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthrough one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through    one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through                               one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through                                                             one file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through AAAone file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAone file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAone file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one    file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one                               file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one                                                             file handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one AAAfile handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfile handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfile handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file    handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file                               handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file                                                             handle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file AAAhandle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhandle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhandle is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle    is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle                               is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle                                                             is visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle AAAis visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAis visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAis visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is    visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is                               visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is                                                             visible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is AAAvisible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvisible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvisible\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\n\n\n\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nAAAthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAthrough another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough    another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough                               another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough                                                             another file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough AAAanother file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAanother file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAanother file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another    file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another                               file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another                                                             file handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another AAAfile handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfile handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfile handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file    handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file                               handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file                                                             handle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file AAAhandle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhandle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhandle).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle)))).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle))))))))))))))))))))))))))))))).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle)....', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle)...............................', 'Memory-to-memory devices can often be used as a shared resource: you can\nopen the video node multiple times, each application setting up their own codec properties\nthat are local to the file handle, and each can use it independently from the others.\nThe driver will arbitrate access to the codec and reprogram it whenever another file\nhandler gets access. This is different from the usual video node behavior where the video properties\nare global to the device (i.e. changing something through one file handle is visible\nthrough another file handle).............................................................'], ['</para>', '>>>/para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/para>', '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/para>', '</para><<<>>>', '</para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</para><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</para>AAA', '</para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</para>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', '</para></para></para>', '</para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para>', '</para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para></para>', '', '<<<</para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</para>', '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<</para>', '<////para>', '<///////////////////////////////para>', '</////////////////////////////////////////////////////////////para>', '</AAApara>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '</AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApara>', '</para>>>>', '</para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', '</para>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>']]